// Code generated by MockGen. DO NOT EDIT.
// Source: elbv2.go
//
// Generated by this command:
//
//	mockgen -source=elbv2.go -destination=../../../../mocks/pkg/aws/services/elbv2/ELBv2.go
//

// Package mock_elbv2 is a generated GoMock package.
package mock_elbv2

import (
	context "context"
	reflect "reflect"

	elasticloadbalancingv2 "github.com/aws/aws-sdk-go-v2/service/elasticloadbalancingv2"
	gomock "go.uber.org/mock/gomock"
)

// MockELBv2 is a mock of ELBv2 interface.
type MockELBv2 struct {
	ctrl     *gomock.Controller
	recorder *MockELBv2MockRecorder
	isgomock struct{}
}

// MockELBv2MockRecorder is the mock recorder for MockELBv2.
type MockELBv2MockRecorder struct {
	mock *MockELBv2
}

// NewMockELBv2 creates a new mock instance.
func NewMockELBv2(ctrl *gomock.Controller) *MockELBv2 {
	mock := &MockELBv2{ctrl: ctrl}
	mock.recorder = &MockELBv2MockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockELBv2) EXPECT() *MockELBv2MockRecorder {
	return m.recorder
}

// DescribeLoadBalancers mocks base method.
func (m *MockELBv2) DescribeLoadBalancers(ctx context.Context, params *elasticloadbalancingv2.DescribeLoadBalancersInput, optFns ...func(*elasticloadbalancingv2.Options)) (*elasticloadbalancingv2.DescribeLoadBalancersOutput, error) {
	m.ctrl.T.Helper()
	varargs := []any{ctx, params}
	for _, a := range optFns {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DescribeLoadBalancers", varargs...)
	ret0, _ := ret[0].(*elasticloadbalancingv2.DescribeLoadBalancersOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeLoadBalancers indicates an expected call of DescribeLoadBalancers.
func (mr *MockELBv2MockRecorder) DescribeLoadBalancers(ctx, params any, optFns ...any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]any{ctx, params}, optFns...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeLoadBalancers", reflect.TypeOf((*MockELBv2)(nil).DescribeLoadBalancers), varargs...)
}

// DescribeTargetGroups mocks base method.
func (m *MockELBv2) DescribeTargetGroups(ctx context.Context, params *elasticloadbalancingv2.DescribeTargetGroupsInput, optFns ...func(*elasticloadbalancingv2.Options)) (*elasticloadbalancingv2.DescribeTargetGroupsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []any{ctx, params}
	for _, a := range optFns {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DescribeTargetGroups", varargs...)
	ret0, _ := ret[0].(*elasticloadbalancingv2.DescribeTargetGroupsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeTargetGroups indicates an expected call of DescribeTargetGroups.
func (mr *MockELBv2MockRecorder) DescribeTargetGroups(ctx, params any, optFns ...any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]any{ctx, params}, optFns...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeTargetGroups", reflect.TypeOf((*MockELBv2)(nil).DescribeTargetGroups), varargs...)
}
