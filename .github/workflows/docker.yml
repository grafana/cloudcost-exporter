# See https://docs.docker.com/build/ci/github-actions/multi-platform/
name: Docker

on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:
    branches:
      - '*'

permissions:
  contents: read
  id-token: write

env:
  REGISTRY_IMAGE: grafana/cloudcost-exporter
  # Docker image tags. See https://github.com/docker/metadata-action for format
  #     type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
  #    type=sha,prefix={{branch}}-,format=short,enable=${{ github.ref == 'refs/heads/main' }}
  TAGS_CONFIG: |
    type=raw,value=latest,enable=true
    type=sha,prefix=test-,format=short,enable=true
    type=semver,pattern={{version}}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: ${{ env.TAGS_CONFIG }}

      # Setup buildx
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login to Docker Hub
      - name: Get Secrets
        uses: grafana/shared-workflows/actions/get-vault-secrets@main
        with:
          # Secrets placed in the ci/common/<path> path in Vault
          common_secrets: |
            DOCKERHUB_USERNAME=dockerhub:username
            DOCKERHUB_TOKEN=dockerhub:password

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
          #outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=${{ github.event_name != 'pull_request' }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},name-canonical=true,push=${{ github.event_name != 'pull_request' }}
